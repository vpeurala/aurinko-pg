apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

project.group = 'org.aurinko-pg'
project.version = '0.4.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile("org.postgresql:postgresql:42.1.4")
  testCompile("junit:junit:4.12")
  testCompile("com.fasterxml.jackson.core:jackson-databind:2.9.3")
  testCompile("com.zaxxer:HikariCP:2.7.4")
  testCompile("commons-io:commons-io:2.6")
  // 2.1.1 is the version of commons-dbcp2 which scalikejdbc 3.1.0 (used by arctech4) uses by default.
  testCompile("org.apache.commons:commons-dbcp2:2.1.1")
  testCompile("org.springframework:spring-jdbc:5.0.2.RELEASE")
  testCompile("com.github.docker-java:docker-java:3.0.14")
}

/* See https://liviutudor.com/2016/02/11/jacoco-gradle-excluding-source-files-and-classes/ */
jacocoTestReport {
  reports {
    html { enabled true }
  }
}
test.finalizedBy(project.tasks.jacocoTestReport)

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Aurinko-pg'
        packaging 'jar'
        groupId 'org.aurinko-pg'
        artifactId 'aurinko-pg'

        description 'A database snapshot tool in Java, influenced by Stellar (in Python).'
        url 'https://github.com/vpeurala/aurinko-pg'

        scm {
          connection 'git@github.com:vpeurala/aurinko-pg.git'
          developerConnection 'git@github.com:vpeurala/aurinko-pg.git'
          url 'https://github.com/vpeurala/aurinko-pg'
        }

        licenses {
          license {
            name 'MIT License'
            url 'https://opensource.org/licenses/MIT'
          }
        }

        developers {
          developer {
            id 'vpeurala'
            name 'Ville Peurala'
            email 'ville.peurala@gmail.com'
          }
        }
      }
    }
  }
}
